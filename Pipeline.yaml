steps:
  # - label: "check, clippy & test - :rust: nightly"
  #   commands:
  #     - cargo clippy --all -- -D warnings
  #     - cargo test --all-features
  #   retry:
  #     automatic: false
  #   env:
  #     CARGO_INCREMENTAL: false
  #   plugins:
  #     - docker#v3.6.0:
  #         privileged: true
  #         image: "valkum/docker-rust-nightly-sscache:nightly"
  #         propagate-environment: true
  #         always-pull: true
  #         workdir: "/src"
  #         entrypoint: '/bin/sh'
  #         shell: ["-x", "-c"]
  #         init: false
  #         mount-buildkite-agent: false
  #         volumes: ["/var/lib/buildkite/cache:/cache"]
  #         environment: 
  #           - "CARGO_INCREMENTAL"
  #           - "AWS_ACCESS_KEY_ID"
  #           - "AWS_SECRET_ACCESS_KEY"
  #           - "SCCACHE_BUCKET"
  #           - "SCCACHE_ENDPOINT"
  #           - "SCCACHE_S3_USE_SSL"
  #           - "RUSTC_WRAPPER"
  - label: "check, clippy & test - :rust: 1.47.0"
    commands:
      - cargo clippy --all -- -D warnings
      # - cargo test --all-features # Disabled for now, until we have tests
      - cargo build
    retry:
      automatic: false
    plugins:
      - gencer/cache#v2.3.7:
          backend: s3
          key: "v1-cache-{{ runner.os }}-{{ checksum 'Cargo.lock' }}"
          s3:
            bucket: "k8s-conduit-cache"
          paths:
            - '/usr/local/cargo/registry'
            - 'target/debug/build'
            - 'target/debug/deps'
            - 'target/debug/incremental'
      - docker#v3.6.0:
          image: "valkum/docker-rust-ci:1.47.0"
          propagate-environment: true
          always-pull: true
          workdir: "/src"
          entrypoint: '/bin/sh'
          shell: ["-x", "-c"]
          init: false
          mount-buildkite-agent: false
          volumes: ["/var/lib/buildkite/cache:/cache"]
  - wait
  - label: "SyTest - :rust: nightly / :sled:"
    command:
      - "bash /bootstrap.sh conduit"
    plugins:
      - gencer/cache#v2.3.7:
          backend: s3
          key: "v1-cache-{{ runner.os }}-{{ checksum 'cargo.lock' }}"
          s3:
            bucket: "k8s-conduit-cache"
          paths:
            - '/usr/local/cargo/registry'
            - 'target/debug/build'
            - 'target/debug/deps'
            - 'target/debug/incremental'
      - docker#v3.6.0:
          image: "valkum/sytest-conduit:latest"
          propagate-environment: true
          always-pull: true
          workdir: "/src"
          entrypoint: '/bin/sh'
          shell: ["-x", "-c"]
          init: false
          mount-buildkite-agent: false
          volumes: ["./logs:/logs", "/var/lib/buildkite/cache:/cache"]
          environment:
            - "PLUGINS=https://github.com/valkum/sytest_conduit/archive/master.tar.gz"
      - artifacts#v1.3.0:
          upload: [ "logs/**/*.log", "logs/**/*.log.*", "logs/results.tap" ]
      - matrix-org/annotate:
          path: "logs/annotate.md"
          style: "error"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2
  - label: ðŸ§ª Complement
    soft_fail: true
    commands:
      - docker build -t complement-conduit -f tests/Complement.Dockerfile .
      - "wget -N https://github.com/matrix-org/complement/archive/master.tar.gz && tar -xzf master.tar.gz"
      - "cd complement-master && COMPLEMENT_BASE_IMAGE=complement-conduit:latest go test -v ./tests"
    plugins:
      - gencer/cache#v2.3.7:
          backend: s3
          key: "v1-cache-{{ runner.os }}-{{
          s3:
            bucket: "k8s-conduit-cache"
          paths:
            - '/usr/local/cargo/registry'
            - 'target/debug/build'
            - 'target/debug/deps'
            - 'target/debug/incremental'
      - docker#v3.6.0:
          image: "valkum/complement:latest"
          mount-buildkite-agent: false
          publish: [ "8448:8448" ]
          # Complement uses Docker so pass through the docker socket. This means Complement shares
          # the hosts Docker.
          volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          environment: 
            - "CI=true"
            - "COMPLEMENT_CA=true"